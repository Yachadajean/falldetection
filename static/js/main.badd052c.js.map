{"version":3,"file":"static/js/main.badd052c.js","mappings":"MAwBE,SAASA,EAAoBC,GAC3BA,EAAaC,YAAYC,UAAU,CACjCC,iBAAiB,EACjBC,qBAAsBC,EAAsB,6BAE7CC,MAAK,SAASC,GACbC,QAAQC,IAAI,sBAAuBF,EAErC,IACCG,OAAM,SAASC,GACdH,QAAQG,MAAM,gCAAiCA,EACjD,GACF,CAGA,SAASN,EAAsBO,GAC7B,MACMC,GAAUD,EADA,IAAIE,QAAQ,EAAIF,EAAaG,OAAS,GAAK,IAExDC,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEXC,EAAUC,OAAOC,KAAKN,GACtBO,EAAc,IAAIC,WAAWJ,EAAQF,QAE3C,IAAK,IAAIO,EAAI,EAAGA,EAAIL,EAAQF,SAAUO,EACpCF,EAAYE,GAAKL,EAAQM,WAAWD,GAEtC,OAAOF,CACT,CAnDE,kBAAmBI,WACnBA,UAAUC,cAAcC,SAAS,sBAAsBpB,MAAK,SAASN,GACnEQ,QAAQC,IAAI,wCAAyCT,EAAa2B,OAGlC,YAA5BC,aAAaC,WACfD,aAAaE,oBAAoBxB,MAAK,SAASuB,GAC1B,YAAfA,GACFrB,QAAQC,IAAI,mCACZV,EAAoBC,IAEpBQ,QAAQC,IAAI,iCAEhB,IAEAV,EAAoBC,EAExB,IAAGU,OAAM,SAASC,GAChBH,QAAQC,IAAI,sCAAuCE,EACrD,G","sources":["index.js"],"sourcesContent":["// Check if Service Worker is supported in the browser\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('/service-worker.js').then(function(registration) {\n      console.log('Service Worker registered with scope:', registration.scope);\n  \n      // Request permission to show notifications\n      if (Notification.permission === 'default') {\n        Notification.requestPermission().then(function(permission) {\n          if (permission === 'granted') {\n            console.log('Notification permission granted');\n            subscribeUserToPush(registration);\n          } else {\n            console.log('Notification permission denied');\n          }\n        });\n      } else {\n        subscribeUserToPush(registration);\n      }\n    }).catch(function(error) {\n      console.log('Service Worker registration failed:', error);\n    });\n  }\n  \n  // Function to subscribe the user to push notifications\n  function subscribeUserToPush(registration) {\n    registration.pushManager.subscribe({\n      userVisibleOnly: true,  // User must be able to see notifications\n      applicationServerKey: urlBase64ToUint8Array('<your-public-vapid-key>')  // Replace with your VAPID public key\n    })\n    .then(function(subscription) {\n      console.log('User is subscribed:', subscription);\n      // Send the subscription object to your backend server to store it\n    })\n    .catch(function(error) {\n      console.error('Failed to subscribe the user:', error);\n    });\n  }\n  \n  // Helper to convert VAPID key to Uint8Array\n  function urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n      .replace(/\\-/g, '+')\n      .replace(/_/g, '/');\n  \n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n  \n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n  "],"names":["subscribeUserToPush","registration","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","then","subscription","console","log","catch","error","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","navigator","serviceWorker","register","scope","Notification","permission","requestPermission"],"sourceRoot":""}